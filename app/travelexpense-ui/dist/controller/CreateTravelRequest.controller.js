sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast"],function(e,t){"use strict";return e.extend("travel.travelexpenseui.controller.CreateTravelRequest",{onInit:function(){const e=new sap.ui.model.json.JSONModel;e.loadData("model/cities.json");this.getView().setModel(e,"cities");const t={name:"Pratibha Jawale",id:"EMP001"};const a=new sap.ui.model.json.JSONModel(t);this.getOwnerComponent().setModel(a,"employeeModel");this.getView().setModel(this.getOwnerComponent().getModel());this.getOwnerComponent().getRouter().getRoute("RouteCreateTravelRequest").attachPatternMatched(this._onRouteMatched,this)},_onRouteMatched:function(e){console.log("Returned to CreateTravelRequest screen");const t=new sap.ui.model.json.JSONModel;this.getOwnerComponent().setModel(t,"travelData")},onReview:function(){const e=this.getView();const a={startDate:e.byId("startDate").getDateValue(),endDate:e.byId("endDate").getDateValue(),departure:e.byId("departure").getSelectedItem().getText(),arrival:e.byId("arrival").getSelectedItem().getText(),postingDate:e.byId("postingDate").getDateValue(),selfTravel:e.byId("selfTravel").getSelectedKey(),placeOfVisit:e.byId("placeOfVisit").getValue(),travelType:e.byId("travelType").getSelectedItem().getText(),purposeOfTravel:e.byId("purposeOfTravel").getValue(),estimatedCosts:e.byId("estimatedCosts").getValue(),additionalTravellers:e.byId("additionalTravellers").getValue(),advances:e.byId("advances").getValue(),costAssignment:e.byId("costAssignment").getText()};console.log("Review Data:",a);t.show("Review data captured. Check console.")},onChangePlace:function(e){const t=e.getParameter("value");const a=e.getSource();const s=a.getItems();const r=s.some(e=>e.getText()===t);if(!r){console.log("User entered custom city:",t)}else{console.log("City selected from list:",t)}},onDateChange:function(){var e=this.byId("startDate").getDateValue();var t=this.byId("endDate").getDateValue();if(e&&t&&e>=t){this.byId("startDate").setValueState("Error");this.byId("endDate").setValueState("Error");this.byId("startDate").setValueStateText("Start must be before End.");this.byId("endDate").setValueStateText("End must be after Start.")}else{this.byId("startDate").setValueState("None");this.byId("endDate").setValueState("None")}},onReviewTravelRequest:function(){var e=this.getView().getModel();const t=this.getView();const a=t.byId("startDate").getDateValue();if(!a||isNaN(a.getTime())){this.byId("startDate").setValueState("Error");this.byId("startDate").setValueStateText("start date is invalid or empty.");return}const s=a.toISOString().split("T")[0];const r=t.byId("endDate").getDateValue();if(!r||isNaN(r.getTime())){this.byId("endDate").setValueState("Error");this.byId("endDate").setValueStateText("end Date is invalid or empty.");return}const l=r.toISOString().split("T")[0];var i=t.byId("departure").getSelectedItem();var o=t.byId("arrival").getSelectedItem();if(i!==null){var i=t.byId("departure").getSelectedItem().getText()}else{this.byId("departure").setValueState("Error");this.byId("departure").setValueStateText("departure is empty or not selected.");return}if(o!==null){var o=t.byId("arrival").getSelectedItem().getText()}else{this.byId("arrival").setValueState("Error");this.byId("arrival").setValueStateText("arrival is empty or not selected.");return}const n=t.byId("postingDate").getDateValue();if(!n||isNaN(n.getTime())){this.byId("postingDate").setValueState("Error");this.byId("postingDate").setValueStateText("posting Date is invalid or empty.");return}const d=n.toISOString().split("T")[0];const u=t.byId("selfTravel").getSelectedKey();const c=t.byId("placeOfVisitComboBox").getValue();var y=t.byId("estimatedCosts").getValue();if(!c||c.trim()===""){this.byId("placeOfVisitComboBox").setValueState("Error");this.byId("placeOfVisitComboBox").setValueStateText("place Of Visit is empty.");return}var g=t.byId("travelType").getSelectedItem();if(g!==null){g=t.byId("travelType").getSelectedItem().getText()}else{this.byId("travelType").setValueState("Error");this.byId("travelType").setValueStateText("travel Type is empty or not selected.");return}var v=t.byId("purposeOfTravel").getValue();const I=t.byId("additionalTravellers").getValue();const p=t.byId("advances").getValue();const b=t.byId("costAssignment").getText();if(!u){this.byId("selfTravel").setValueState("Error");this.byId("selfTravel").setValueStateText("self Travel is empty or not selected.");return}if(!v){v=""}if(!y){y=0}var T="Review";const m={"@odata.context":"$metadata#TravelRequests/$entity",ID:S,employee:"EMP001",startDate:s,endDate:l,postingDate:d,selfTravel:u,placeOfVisit:c,estimatedCost:y,action:1,createdAt:(new Date).toISOString(),departure:i,arrival:o,travelType:g,purposeOfTravel:v,additionalTravellers:I,advances:p,costAssignment:b,status:T};const V=new sap.ui.model.json.JSONModel(m);this.getOwnerComponent().setModel(V,"travelData");console.log("empty travelId");var S="-";this.getOwnerComponent().getRouter().navTo("ReviewTravelScreen",{travelId:S})},onSaveDraft:function(){var e=this.getView().getModel();const t=this.getView();const a=t.byId("startDate").getDateValue();if(!a||isNaN(a.getTime())){this.byId("startDate").setValueState("Error");this.byId("startDate").setValueStateText("start date is invalid or empty.");return}const s=a.toISOString().split("T")[0];const r=t.byId("endDate").getDateValue();if(!r||isNaN(r.getTime())){this.byId("endDate").setValueState("Error");this.byId("endDate").setValueStateText("end Date is invalid or empty.");return}const l=r.toISOString().split("T")[0];var i=t.byId("departure").getSelectedItem();var o=t.byId("arrival").getSelectedItem();if(i!==null){var i=t.byId("departure").getSelectedItem().getText()}else{this.byId("departure").setValueState("Error");this.byId("departure").setValueStateText("departure is empty or not selected.");return}if(o!==null){var o=t.byId("arrival").getSelectedItem().getText()}else{this.byId("arrival").setValueState("Error");this.byId("arrival").setValueStateText("arrival is empty or not selected.");return}const n=t.byId("postingDate").getDateValue();if(!n||isNaN(n.getTime())){this.byId("postingDate").setValueState("Error");this.byId("postingDate").setValueStateText("posting Date is invalid or empty.");return}const d=n.toISOString().split("T")[0];const u=t.byId("selfTravel").getSelectedKey();const c=t.byId("placeOfVisitComboBox").getValue();var y=t.byId("estimatedCosts").getValue();if(!c||c.trim()===""){this.byId("placeOfVisitComboBox").setValueState("Error");this.byId("placeOfVisitComboBox").setValueStateText("place Of Visit is empty.");return}var g=t.byId("travelType").getSelectedItem();if(g!==null){g=t.byId("travelType").getSelectedItem().getText()}else{this.byId("travelType").setValueState("Error");this.byId("travelType").setValueStateText("travel Type is empty or not selected.");return}var v=t.byId("purposeOfTravel").getValue();const I=t.byId("additionalTravellers").getValue();const p=t.byId("advances").getValue();const b=t.byId("costAssignment").getText();if(!u){this.byId("selfTravel").setValueState("Error");this.byId("selfTravel").setValueStateText("self Travel is empty or not selected.");return}if(!v){v=""}if(!y){y=0}var T=crypto.randomUUID();var m="Draft";this.getView().setBusy(true);var V=e.bindList("/TravelRequests",undefined,undefined,undefined,{$$updateGroupId:"travelGroup"});V.create({ID:T,employee:"EMP001",startDate:s,endDate:l,postingDate:d,selfTravel:u,placeOfVisit:c,estimatedCost:y,action:1,createdAt:(new Date).toISOString(),departure:i,arrival:o,travelType:g,purposeOfTravel:v,additionalTravellers:I,advances:p,costAssignment:b,status:m});e.submitBatch("travelGroup").then(()=>{sap.m.MessageToast.show("Travel request "+T+" saved successfully.");this.getOwnerComponent().getRouter().navTo("ReviewTravelScreen",{travelId:T})}).catch(e=>{sap.m.MessageBox.error("Error saving travel request: "+e.message)}).finally(()=>{this.getView().setBusy(false)})}})});
//# sourceMappingURL=CreateTravelRequest.controller.js.map