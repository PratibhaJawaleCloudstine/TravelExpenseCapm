sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast"],function(e,t){"use strict";return e.extend("travel.travelexpenseui.controller.CreateTravelRequest",{onInit:function(){const e=new sap.ui.model.json.JSONModel;e.loadData("model/cities.json");this.getOwnerComponent().setModel(e,"cities");const t={name:"Pratibha Jawale",id:"EMP001"};const a=new sap.ui.model.json.JSONModel(t);this.getOwnerComponent().setModel(a,"employeeModel");this.getView().setModel(this.getOwnerComponent().getModel());this.getOwnerComponent().getRouter().getRoute("RouteCreateTravelRequest").attachPatternMatched(this._onRouteMatched,this)},_onRouteMatched:function(e){console.log("Returned to CreateTravelRequest screen");const t=new sap.ui.model.json.JSONModel;this.getOwnerComponent().setModel(t,"travelData");const a=this.getOwnerComponent().getModel();const s=a.bindList("/TravelRequests");s.requestContexts().then(e=>{const t=e.map(e=>e.getObject());console.log("All TravelRequests:",t);const a=t.filter(e=>(e.Approvedstatus||"").toLowerCase()==="approved");const s=t.filter(e=>(e.Approvedstatus||"").toLowerCase()==="rejected");const r=t.filter(e=>(e.Approvedstatus||"").toLowerCase()==="awaiting approval");const o=t.filter(e=>(e.status||"").toLowerCase()==="draft");const n=t;this.getOwnerComponent().setModel(new sap.ui.model.json.JSONModel({travelRequests:n}),"AlltravelData");this.getOwnerComponent().setModel(new sap.ui.model.json.JSONModel({travelRequests:a}),"ApprovedData");this.getOwnerComponent().setModel(new sap.ui.model.json.JSONModel({travelRequests:s}),"RejectedData");this.getOwnerComponent().setModel(new sap.ui.model.json.JSONModel({travelRequests:r}),"NotReviewedData");this.getOwnerComponent().setModel(new sap.ui.model.json.JSONModel({travelRequests:o}),"DraftData");console.log("All:",n.length,"Approved:",a.length,"Rejected:",s.length,"NotReviewed:",r.length,"Draft:",o.length);console.log(this.getOwnerComponent().getModel("AlltravelData").getData());console.log(this.getOwnerComponent().getModel("ApprovedData").getData());console.log(this.getOwnerComponent().getModel("RejectedData").getData());console.log(this.getOwnerComponent().getModel("NotReviewedData").getData());console.log(this.getOwnerComponent().getModel("DraftData").getData())}).catch(e=>{console.error("Failed to fetch TravelRequests:",e);sap.m.MessageBox.error("Error fetching travel requests.")})},onForwardArrowPress:function(e){const t=e.getSource().getBindingContext("DraftData");const a=t.getObject();var s=a.ID;this.getOwnerComponent().getRouter().navTo("ReviewDraftRequest",{travelId:s})},onForwardArrowPressApproved:function(e){const t=e.getSource().getBindingContext("ApprovedData");const a=t.getObject();var s=a.ID;this.getOwnerComponent().getRouter().navTo("ReviewTravelScreen",{travelId:s})},onForwardArrowPressRejected:function(e){const t=e.getSource().getBindingContext("RejectedData");const a=t.getObject();var s=a.ID;this.getOwnerComponent().getRouter().navTo("ReviewTravelScreen",{travelId:s})},onForwardArrowPressNotReviewed:function(e){const t=e.getSource().getBindingContext("NotReviewedData");const a=t.getObject();var s=a.ID;this.getOwnerComponent().getRouter().navTo("ReviewTravelScreen",{travelId:s})},onForwardArrowPressAll:function(e){const t=e.getSource().getBindingContext("AlltravelData");const a=t.getObject();var s=a.ID;if(a.Approvedstatus===undefined||a.Approvedstatus===null||a.Approvedstatus===""){this.getOwnerComponent().getRouter().navTo("ReviewDraftRequest",{travelId:s})}else{this.getOwnerComponent().getRouter().navTo("ReviewTravelScreen",{travelId:s})}},formatStatusText:function(e){if(!e){return"Draft"}const t=e.toLowerCase();if(t==="awaiting approval"){return"Awaiting Approval"}return t.charAt(0).toUpperCase()+t.slice(1)},formatStatusState:function(e){if(!e){return"Warning"}e=e.toLowerCase();console.log(e);if(e==="approved"){return"Success"}else if(e==="rejected"){return"Error"}else if(e==="awaiting approval"){return"Information"}return"None"},onReview:function(){const e=this.getView();const a={startDate:e.byId("startDate").getDateValue(),endDate:e.byId("endDate").getDateValue(),departure:e.byId("departure").getSelectedItem().getText(),arrival:e.byId("arrival").getSelectedItem().getText(),postingDate:e.byId("postingDate").getDateValue(),selfTravel:e.byId("selfTravel").getSelectedKey(),placeOfVisit:e.byId("placeOfVisit").getValue(),travelType:e.byId("travelType").getSelectedItem().getText(),purposeOfTravel:e.byId("purposeOfTravel").getValue(),estimatedCosts:e.byId("estimatedCosts").getValue(),additionalTravellers:e.byId("additionalTravellers").getValue(),advances:e.byId("advances").getValue(),costAssignment:parseInt(e.byId("costAssignment").getText(),10)||0};console.log("estimatedCosts-- 63");console.log(estimatedCosts);console.log("Review Data:",a);t.show("Review data captured. Check console.")},onChangePlace:function(e){const t=e.getParameter("value");const a=e.getSource();const s=a.getItems();const r=s.some(e=>e.getText()===t);if(!r){console.log("User entered custom city:",t)}else{console.log("City selected from list:",t)}},onDateChange:function(){var e=this.byId("startDate").getDateValue();var t=this.byId("endDate").getDateValue();if(e&&t&&e>=t){this.byId("startDate").setValueState("Error");this.byId("endDate").setValueState("Error");this.byId("startDate").setValueStateText("Start must be before End.");this.byId("endDate").setValueStateText("End must be after Start.")}else{this.byId("startDate").setValueState("None");this.byId("endDate").setValueState("None")}},onReviewTravelRequest:function(){var e=this.getView().getModel();const t=this.getView();const a=t.byId("startDate").getDateValue();if(!a||isNaN(a.getTime())){this.byId("startDate").setValueState("Error");this.byId("startDate").setValueStateText("start date is invalid or empty.");return}const s=a.toISOString().split("T")[0];const r=t.byId("endDate").getDateValue();if(!r||isNaN(r.getTime())){this.byId("endDate").setValueState("Error");this.byId("endDate").setValueStateText("end Date is invalid or empty.");return}const o=r.toISOString().split("T")[0];var n=t.byId("departure").getSelectedItem();var l=t.byId("arrival").getSelectedItem();if(n!==null){var n=t.byId("departure").getSelectedItem().getText()}else{this.byId("departure").setValueState("Error");this.byId("departure").setValueStateText("departure is empty or not selected.");return}if(l!==null){var l=t.byId("arrival").getSelectedItem().getText()}else{this.byId("arrival").setValueState("Error");this.byId("arrival").setValueStateText("arrival is empty or not selected.");return}const i=t.byId("postingDate").getDateValue();if(!i||isNaN(i.getTime())){this.byId("postingDate").setValueState("Error");this.byId("postingDate").setValueStateText("posting Date is invalid or empty.");return}const d=i.toISOString().split("T")[0];const u=t.byId("selfTravel").getSelectedKey();const g=t.byId("placeOfVisitComboBox").getValue();var c=parseInt(t.byId("estimatedCosts").getValue(),10)||0;console.log("estimatedCosts-- 152");console.log(c);if(!g||g.trim()===""){this.byId("placeOfVisitComboBox").setValueState("Error");this.byId("placeOfVisitComboBox").setValueStateText("place Of Visit is empty.");return}var v=t.byId("travelType").getSelectedItem();if(v!==null){v=t.byId("travelType").getSelectedItem().getText()}else{this.byId("travelType").setValueState("Error");this.byId("travelType").setValueStateText("travel Type is empty or not selected.");return}var p=t.byId("purposeOfTravel").getValue();const I=t.byId("additionalTravellers").getValue();const y=t.byId("advances").getValue();const m=t.byId("costAssignment").getText();if(!u){this.byId("selfTravel").setValueState("Error");this.byId("selfTravel").setValueStateText("self Travel is empty or not selected.");return}if(!p){p=""}if(!c){c=0}var T="Review";const b={"@odata.context":"$metadata#TravelRequests/$entity",ID:S,employee:"EMP001",startDate:s,endDate:o,postingDate:d,selfTravel:u,placeOfVisit:g,estimatedCost:c,action:1,createdAt:(new Date).toISOString(),departure:n,arrival:l,travelType:v,purposeOfTravel:p,additionalTravellers:I,advances:y,costAssignment:m,status:T};console.log("estimatedCosts-- 212");console.log(c);const f=new sap.ui.model.json.JSONModel(b);this.getOwnerComponent().setModel(f,"travelData");console.log("empty travelId");var S="-";this.getOwnerComponent().getRouter().navTo("ReviewTravelScreen",{travelId:S})},onSaveDraft:function(){var e=this.getView().getModel();const t=this.getView();const a=t.byId("startDate").getDateValue();if(!a||isNaN(a.getTime())){this.byId("startDate").setValueState("Error");this.byId("startDate").setValueStateText("start date is invalid or empty.");return}const s=a.toISOString().split("T")[0];const r=t.byId("endDate").getDateValue();if(!r||isNaN(r.getTime())){this.byId("endDate").setValueState("Error");this.byId("endDate").setValueStateText("end Date is invalid or empty.");return}const o=r.toISOString().split("T")[0];var n=t.byId("departure").getSelectedItem();var l=t.byId("arrival").getSelectedItem();if(n!==null){var n=t.byId("departure").getSelectedItem().getText()}else{this.byId("departure").setValueState("Error");this.byId("departure").setValueStateText("departure is empty or not selected.");return}if(l!==null){var l=t.byId("arrival").getSelectedItem().getText()}else{this.byId("arrival").setValueState("Error");this.byId("arrival").setValueStateText("arrival is empty or not selected.");return}const i=t.byId("postingDate").getDateValue();if(!i||isNaN(i.getTime())){this.byId("postingDate").setValueState("Error");this.byId("postingDate").setValueStateText("posting Date is invalid or empty.");return}const d=i.toISOString().split("T")[0];const u=t.byId("selfTravel").getSelectedKey();const g=t.byId("placeOfVisitComboBox").getValue();var c=parseInt(t.byId("estimatedCosts").getValue(),10)||0;console.log("estimatedCosts-- 264");console.log(c);if(!g||g.trim()===""){this.byId("placeOfVisitComboBox").setValueState("Error");this.byId("placeOfVisitComboBox").setValueStateText("place Of Visit is empty.");return}var v=t.byId("travelType").getSelectedItem();if(v!==null){v=t.byId("travelType").getSelectedItem().getText()}else{this.byId("travelType").setValueState("Error");this.byId("travelType").setValueStateText("travel Type is empty or not selected.");return}var p=t.byId("purposeOfTravel").getValue();const I=t.byId("additionalTravellers").getValue();const y=t.byId("advances").getValue();const m=t.byId("costAssignment").getText();if(!u){this.byId("selfTravel").setValueState("Error");this.byId("selfTravel").setValueStateText("self Travel is empty or not selected.");return}if(!p){p=""}if(!c){c=0}var T=crypto.randomUUID();var b="Draft";this.getView().setBusy(true);var f=e.bindList("/TravelRequests",undefined,undefined,undefined,{$$updateGroupId:"travelGroup"});f.create({ID:T,employee:"EMP001",startDate:s,endDate:o,postingDate:d,selfTravel:u,placeOfVisit:g,estimatedCost:c,action:1,createdAt:(new Date).toISOString(),departure:n,arrival:l,travelType:v,purposeOfTravel:p,additionalTravellers:I,advances:y,costAssignment:m,status:b});e.submitBatch("travelGroup").then(()=>{sap.m.MessageToast.show("Travel request "+T+" saved successfully.");this.getOwnerComponent().getRouter().navTo("ReviewTravelScreen",{travelId:T})}).catch(e=>{sap.m.MessageBox.error("Error saving travel request: "+e.message)}).finally(()=>{this.getView().setBusy(false)})}})});
//# sourceMappingURL=CreateTravelRequest.controller.js.map